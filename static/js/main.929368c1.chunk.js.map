{"version":3,"sources":["components/App/ContactList/ContactListItem/ContactListItem.module.css","components/App/Filter/Filter.module.css","components/App/ContactList/ContactList.module.css","transitions/contact.module.css","transitions/title.module.css","transitions/filter.module.css","transitions/alert.module.css","redux/contacts/contactsActions.js","components/App/ContactList/ContactListItem/ContactListItem.js","components/App/ContactList/ContactList.jsx","components/App/Filter/Filter.js","components/App/ContactForm/ContactForm.js","components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/App/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","task","payload","id","uuidv4","removeContact","changeFilter","connect","state","ownProps","item","tasks","items","find","dispatch","onRemove","contactsActions","name","number","className","styles","ContactList_item","contactWrapper","numberContact","ContactList_button","type","onClick","normalizedFilter","filter","toLowerCase","contacts","includes","TransitionGroup","component","ContactList","map","CSSTransition","timeout","unmountOnExit","classNames","contactTransition","mapDispatchToProps","onChangeFilter","value","filterContainer","title","filterEditor_input","onChange","e","target","ContactForm","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","FormEditor","onSubmit","this","FormEditor_label","FormEditor_input","required","mask","FormEditor_button","Component","defaultProps","App","in","titleTransition","appear","filterTransition","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.929368c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList_item\":\"ContactListItem_ContactList_item__2G7o7\",\"ContactList_button\":\"ContactListItem_ContactList_button__1N99X\",\"numberContact\":\"ContactListItem_numberContact__HXzvH\",\"contactWrapper\":\"ContactListItem_contactWrapper__jcwEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterEditor_input\":\"Filter_filterEditor_input__1NgNo\",\"filterContainer\":\"Filter_filterContainer__CMO4T\",\"title\":\"Filter_title__1K8K-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3WsL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contact_enter__1myFp\",\"enterActive\":\"contact_enterActive__3DQwQ\",\"exit\":\"contact_exit__ZhC9F\",\"exitActive\":\"contact_exitActive__32MWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"title_appear__3xhYP\",\"appearDone\":\"title_appearDone__Y9si4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__2w67p\",\"enterActive\":\"filter_enterActive__3tCzz\",\"exit\":\"filter_exit__3GG0R\",\"exitActive\":\"filter_exitActive___qZ8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__279HC\",\"enterActive\":\"alert_enterActive__3Zgsi\",\"exit\":\"alert_exit__ofmOd\",\"exitActive\":\"alert_exitActive__5Ewgh\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", (task) => ({\r\n  payload: {\r\n    task: { id: uuidv4(), ...task },\r\n  },\r\n}));\r\n\r\nconst removeContact = createAction(\"contacts/remove\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContact, removeContact, changeFilter };\r\n","import React from \"react\";\r\nimport contactsActions from \"../../../../redux/contacts/contactsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li className={styles.ContactList_item}>\r\n    <div className={styles.contactWrapper}>\r\n      <p>{name}</p>\r\n      <p className={styles.numberContact}>{number}</p>\r\n    </div>\r\n    {\r\n      <button\r\n        className={styles.ContactList_button}\r\n        type=\"button\"\r\n        name=\"delete\"\r\n        onClick={onRemove}\r\n      >\r\n        &#10006;\r\n      </button>\r\n    }\r\n  </li>\r\n);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.tasks.items.find((item) => item.id === ownProps.id);\r\n  return { ...item };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(contactsActions.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport contactTransition from \"../../../transitions/contact.module.css\";\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.ContactList}>\r\n    {contacts.map(({ id }) => (\r\n      <CSSTransition\r\n        key={id}\r\n        timeout={250}\r\n        unmountOnExit\r\n        classNames={contactTransition}\r\n      >\r\n        <ContactListItem key={id} id={id} />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.tasks;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const visibleContacts = items.filter((task) =>\r\n    task.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../../redux/contacts/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={styles.filterContainer}>\r\n      <h3 className={styles.title}>Find contacts by name</h3>\r\n      <input\r\n        className={styles.filterEditor_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.tasks.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport InputTelMask from \"react-input-mask\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../../redux/contacts/contactsActions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.FormEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.FormEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.FormEditor_label}>\r\n          Number\r\n          <InputTelMask\r\n            className={styles.FormEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            required\r\n            mask=\"999-99-99\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.FormEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.defaultProps = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport titleTransition from \"../../transitions/title.module.css\";\nimport alertTransition from \"../../transitions/alert.module.css\";\nimport filterTransition from \"../../transitions/filter.module.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"mainContainer\">\n        <CSSTransition\n          in={true}\n          timeout={500}\n          classNames={titleTransition}\n          appear={true}\n        >\n          <h1 className=\"mainTitle\">Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm />\n\n        <CSSTransition\n          in={true}\n          timeout={250}\n          unmountOnExit\n          classNames={filterTransition}\n        >\n          <Filter />\n        </CSSTransition>\n        <ContactList />\n      </div>\n    );\n  }\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nconst addContact = (state, action) => [action.payload.task, ...state];\r\n\r\nconst removeContact = (state, action) =>\r\n  state.filter((task) => task.id !== action.payload);\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  {\r\n    [contactsActions.addContact]: addContact,\r\n    [contactsActions.removeContact]: removeContact,\r\n  }\r\n);\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (state, { payload }) => (state = payload),\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import contactsReducer from \"./contacts/contactsReducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n  reducer: { tasks: contactsReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormEditor\":\"ContactForm_FormEditor__NFYJ6\",\"FormEditor_label\":\"ContactForm_FormEditor_label__Lz8Yx\",\"FormEditor_input\":\"ContactForm_FormEditor_input__2pzy4\",\"FormEditor_button\":\"ContactForm_FormEditor_button__Gm1zv\"};"],"sourceRoot":""}